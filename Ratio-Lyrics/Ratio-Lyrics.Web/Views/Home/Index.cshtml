@inject IConfiguration Configuration
@model SongViewModel
@{
    ViewData["Title"] = "Home Page";    
    var publicApiHost = Configuration["PublicApiUrl"].ToString() ?? "https://localhost:7186/";
}
<input type="hidden" value="@publicApiHost" id="public-api-host" />
@if(Model == null)
{
    <div class="form-group row">
        <h1 class="display-4 text-center">Songs </h1>
        <input type="text" id="input-search-songs" class="form-control col-6" />
    </div>
    <div id="searchResultDemoArea"></div>
    <div id="songDetailArea"></div>
}
else
{
    <div class="form-group row">
        <h1 class="display-4 text-center">Songs </h1>
        <input type="text" id="input-search-songs" class="form-control col-6" />
    </div>
    <div id="searchResultDemoArea"></div>
    <div id="songDetailArea">
        <h2>@Model.DisplayName</h2>
        <div>
            <img src="@Model.ImageUrl" alt="@Model.DisplayName" style="height:300px;width:auto" />
        </div>        
        
        @if(Model.Artists != null && Model.Artists.Any())
        {
            <h3>Artist:</h3>
            <p><i>@string.Join(", ", Model.Artists.Select(x=>x.Name))</i></p>            
        }
        <h3>Media Links:</h3>
        @if(Model.MediaPlatformLinks != null && Model.MediaPlatformLinks.Any())
        {
            <ul>
                @foreach(var item in Model.MediaPlatformLinks)
                {
                    if (string.IsNullOrEmpty(item.Link)) continue;
                    <li><a href="@item.Link" target="_blank">@item.Name</a></li>
                }
            </ul>            
        }

        <div>
            <h3>Lyrics:</h3>
            <div>@Html.Raw(Model.Lyric)</div>
        </div>        
    </div>
}

<script type="module" defer src="@Url.Content("~/js/home.js")"></script>